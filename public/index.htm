<!doctype html>
<html>
	<head>
		<title>Logger</title>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fetch/3.0.0/fetch.min.js"></script>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js"></script>

		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.23.0/vuedraggable.umd.min.js"></script>
		

		<script type="text/javascript">

			var app;
			$(()=>
			{
				// Configure App
				app = new Vue(
				{
					el: '#app',
					mounted()
					{
						this.Reload();
					},
					data:
					{
						logData: [],
						text: ""
					},
					computed:
					{
						apiPath()
						{
							return document.location.origin + "/log?msg={TEXT}";
						}
					},
					methods:
					{
						Reload()
						{
							fetch("/log.json").then(o=>o.json()).then(o =>
							{
								this.logData = o;
							});
							return this;
						},
						Write()
						{
							fetch("/log?msg=" + encodeURIComponent(this.text)).then(o=>o.json()).then(o =>
							{
								document.getElementById("txtInput").innerText = "";
								this.text = "";
								this.logData.unshift(o);
								while (this.logData.length>1000) this.logData.pop();
							});
							return this;
						}
					},
					components:
					{
						editable:
						{
							template: '<div contenteditable="true" @input="update"></div>',
							props: ['text', 'html'],
							mounted()
							{
								if (this.html) this.$el.innerHTML = this.html;
								else if (this.text) this.$el.innerText = this.text;
							},
							methods:
							{
								update(e)
								{
									this.$emit('update', e.target.innerText);
								}
							}
						}
					}
				});
			});
		
		</script>
		<style type="text/css">

			body
			{
				background-color: #999;
			}
			
			#txtInput
			{
				background-color: #fff;
				border: 1px solid #000;
				border-radius: 4px;
				box-shadow: 4px 4px 16px rgba(0,0,0,0.25);
				color: #000;
				height: 60px;
				overflow-y: auto;
				padding: 2px;
				width: 400px;
			}

			#divLog
			{
				bottom: 0px;
				left: 0px;
				overflow-y: scroll;
				position: fixed;
				right: 0px;
				top: 100px;
			}

			#divLog > table
			{
				border-collapse: collapse;
				width: 100%;
			}

			#divLog > table > thead > tr > th
			{
				border: 1px solid #444;
				background-color: #444;
				color: #fff;
				vertical-align: top;
			}
			
			#divLog > table > tbody > tr > td
			{
				border: 1px solid #444;
				background-color: #fff;
				color: #000;
				vertical-align: top;
			}

			#divLog > table > tbody > tr > td:first-child
			{
				white-space: nowrap;
			}

			#divLog > table > tbody > tr > td:last-child
			{
				width: 100%;
			}

			#divLog > table > tbody > tr > td:last-child > pre
			{
				margin: 0px;
			}
			
		</style>
	</head>
	<body>
		<div id="app">

			<div style="display:flex;flex-wrap:nowrap;">
				<editable id="txtInput" :text="text" @update="text = $event"></editable>
				<button @click="Write">Write</button>
			</div>
			
			<span>API GET: {{apiPath}}</span>

			<div id="divLog">
				<table>
					<thead>
						<tr>
							<th>Time</th>
							<th>Text</th>
						</tr>
					</thead>
					<tbody>
						<tr v-for="row in logData">
							<td>{{JSON.stringify(new Date(row.timestamp)).replace(/"|Z/g,"").replace(/T/g," ")}}</td>
							<td>
								<pre>{{row.data}}</pre>
							</td>
						</tr>
					</tbody>
				</table>
				
			</div>
			
		</div>
	</body>
</html>